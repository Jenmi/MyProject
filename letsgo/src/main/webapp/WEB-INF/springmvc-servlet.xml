<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd"
    default-autowire="byName">
	 <!-- 组件扫描，自动配置bean -->
	<context:component-scan base-package="com.ijenmi.letsgo.*">
	    <!-- 排除 -->
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	    <!-- 只包含  <context:include-filter type="annotation" expression=""/> -->
	</context:component-scan>
	<!--注解映射器 -->
<!-- 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	注解适配器
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
 -->	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
		mvc:annotation-driven默认加载很多的参数绑定方法，
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
		实际开发时使用mvc:annotation-driven
	 -->
    <mvc:annotation-driven ></mvc:annotation-driven> 
	<!-- 处理器映射器 将bean的name作为url进行查找 ，需要在配置Handler时指定beanname（就是url） 
	所有的映射器都实现 HandlerMapping接口。
	-->
	
	<!-- 拦截器注册   过时了不用
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<bean class="com.ijenmi.interceptor.SharedRenderVariableInterceptor"/>
		</property>
	</bean> -->
	<mvc:interceptors> 
	    <mvc:interceptor>  
        	<mvc:mapping path="/**"/>  
			<bean class="com.ijenmi.interceptor.LoginInterceptor" />  
		</mvc:interceptor>
		<mvc:interceptor>  
        	<mvc:mapping path="/**"/>  
			<bean class="com.ijenmi.interceptor.SharedRenderVariableInterceptor" />  
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
		<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/pages"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <mvc:resources mapping="/" location="/"></mvc:resources>
    <mvc:resources mapping="/scripts/**" location="/scripts/"></mvc:resources>
    <mvc:resources mapping="/images/**" location="/images/"></mvc:resources>
    <mvc:resources mapping="/style/**" location="/style/"></mvc:resources>
    <mvc:resources mapping="/utils/**" location="/utils/"></mvc:resources>
	<mvc:resources mapping="/js/**" location="/js/"></mvc:resources>
	<mvc:resources mapping="/css/**" location="/css/"></mvc:resources>
	<mvc:resources mapping="/widgets/**" location="/widgets/"></mvc:resources>
	<mvc:resources mapping="/font-awesome/**" location="/font-awesome/"></mvc:resources>
</beans>
