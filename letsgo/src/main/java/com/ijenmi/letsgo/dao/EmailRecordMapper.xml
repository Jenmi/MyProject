<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ijenmi.letsgo.dao.EmailRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ijenmi.letsgo.model.EmailRecord" >
    <id column="email_id" property="emailId" jdbcType="INTEGER" />
    <result column="visit_ip" property="visitIp" jdbcType="VARCHAR" />
    <result column="login_id" property="loginId" jdbcType="INTEGER" />
    <result column="email_title" property="emailTitle" jdbcType="VARCHAR" />
    <result column="eamil_content" property="eamilContent" jdbcType="VARCHAR" />
    <result column="email_name" property="emailName" jdbcType="VARCHAR" />
    <result column="email_address" property="emailAddress" jdbcType="VARCHAR" />
    <result column="email_phone" property="emailPhone" jdbcType="VARCHAR" />
    <result column="to_userid" property="toUserid" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    email_id, visit_ip, login_id, email_title, eamil_content, email_name, email_address, 
    email_phone, to_userid, create_date, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from email_record
    where email_id = #{emailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from email_record
    where email_id = #{emailId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ijenmi.letsgo.model.EmailRecord" >
    insert into email_record (email_id, visit_ip, login_id, 
      email_title, eamil_content, email_name, 
      email_address, email_phone, to_userid, 
      create_date, is_delete)
    values (#{emailId,jdbcType=INTEGER}, #{visitIp,jdbcType=VARCHAR}, #{loginId,jdbcType=INTEGER}, 
      #{emailTitle,jdbcType=VARCHAR}, #{eamilContent,jdbcType=VARCHAR}, #{emailName,jdbcType=VARCHAR}, 
      #{emailAddress,jdbcType=VARCHAR}, #{emailPhone,jdbcType=VARCHAR}, #{toUserid,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ijenmi.letsgo.model.EmailRecord" >
    insert into email_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        email_id,
      </if>
      <if test="visitIp != null" >
        visit_ip,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="emailTitle != null" >
        email_title,
      </if>
      <if test="eamilContent != null" >
        eamil_content,
      </if>
      <if test="emailName != null" >
        email_name,
      </if>
      <if test="emailAddress != null" >
        email_address,
      </if>
      <if test="emailPhone != null" >
        email_phone,
      </if>
      <if test="toUserid != null" >
        to_userid,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        #{emailId,jdbcType=INTEGER},
      </if>
      <if test="visitIp != null" >
        #{visitIp,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="emailTitle != null" >
        #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="eamilContent != null" >
        #{eamilContent,jdbcType=VARCHAR},
      </if>
      <if test="emailName != null" >
        #{emailName,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null" >
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="emailPhone != null" >
        #{emailPhone,jdbcType=VARCHAR},
      </if>
      <if test="toUserid != null" >
        #{toUserid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ijenmi.letsgo.model.EmailRecord" >
    update email_record
    <set >
      <if test="visitIp != null" >
        visit_ip = #{visitIp,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=INTEGER},
      </if>
      <if test="emailTitle != null" >
        email_title = #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="eamilContent != null" >
        eamil_content = #{eamilContent,jdbcType=VARCHAR},
      </if>
      <if test="emailName != null" >
        email_name = #{emailName,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null" >
        email_address = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="emailPhone != null" >
        email_phone = #{emailPhone,jdbcType=VARCHAR},
      </if>
      <if test="toUserid != null" >
        to_userid = #{toUserid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where email_id = #{emailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ijenmi.letsgo.model.EmailRecord" >
    update email_record
    set visit_ip = #{visitIp,jdbcType=VARCHAR},
      login_id = #{loginId,jdbcType=INTEGER},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      eamil_content = #{eamilContent,jdbcType=VARCHAR},
      email_name = #{emailName,jdbcType=VARCHAR},
      email_address = #{emailAddress,jdbcType=VARCHAR},
      email_phone = #{emailPhone,jdbcType=VARCHAR},
      to_userid = #{toUserid,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where email_id = #{emailId,jdbcType=INTEGER}
  </update>
</mapper>