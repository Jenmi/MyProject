<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ijenmi.letsgo.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ijenmi.letsgo.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
    <result column="name_en" property="nameEn" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="SMALLINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="email_password" property="emailPassword" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="valid" property="valid" jdbcType="SMALLINT" />
    <result column="revision_count" property="revisionCount" jdbcType="INTEGER" />
    <result column="last_update_user" property="lastUpdateUser" jdbcType="CHAR" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, login_name, password, name_cn, name_en, photo, sex, email, email_password, 
    phone_number, last_login_ip, last_login_time, valid, revision_count, last_update_user, 
    last_update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ijenmi.letsgo.model.User" >
    insert into user (user_id, login_name, password, 
      name_cn, name_en, photo, 
      sex, email, email_password, 
      phone_number, last_login_ip, last_login_time, 
      valid, revision_count, last_update_user, 
      last_update_time)
    values (#{userId,jdbcType=INTEGER}, #{loginName,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{nameCn,jdbcType=VARCHAR}, #{nameEn,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{sex,jdbcType=SMALLINT}, #{email,jdbcType=VARCHAR}, #{emailPassword,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=SMALLINT}, #{revisionCount,jdbcType=INTEGER}, #{lastUpdateUser,jdbcType=CHAR}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ijenmi.letsgo.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nameCn != null" >
        name_cn,
      </if>
      <if test="nameEn != null" >
        name_en,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="emailPassword != null" >
        email_password,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="valid != null" >
        valid,
      </if>
      <if test="revisionCount != null" >
        revision_count,
      </if>
      <if test="lastUpdateUser != null" >
        last_update_user,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="nameCn != null" >
        #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=SMALLINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailPassword != null" >
        #{emailPassword,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=SMALLINT},
      </if>
      <if test="revisionCount != null" >
        #{revisionCount,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateUser != null" >
        #{lastUpdateUser,jdbcType=CHAR},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ijenmi.letsgo.model.User" >
    update user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="nameCn != null" >
        name_cn = #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=SMALLINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailPassword != null" >
        email_password = #{emailPassword,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=SMALLINT},
      </if>
      <if test="revisionCount != null" >
        revision_count = #{revisionCount,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateUser != null" >
        last_update_user = #{lastUpdateUser,jdbcType=CHAR},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ijenmi.letsgo.model.User" >
    update user
    set login_name = #{loginName,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      name_cn = #{nameCn,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=SMALLINT},
      email = #{email,jdbcType=VARCHAR},
      email_password = #{emailPassword,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=SMALLINT},
      revision_count = #{revisionCount,jdbcType=INTEGER},
      last_update_user = #{lastUpdateUser,jdbcType=CHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <select id="getByNameAndPwd" resultMap="BaseResultMap"  parameterType="com.ijenmi.letsgo.model.User">
      select 
    	<include refid="Base_Column_List" />
      from user
      where login_name = #{loginName,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR} 
  </select>
</mapper>