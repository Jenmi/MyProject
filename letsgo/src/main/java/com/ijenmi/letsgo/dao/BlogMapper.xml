<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ijenmi.letsgo.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="com.ijenmi.letsgo.model.Blog" >
    <id column="blog_id" property="blogId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="blog_blong" property="blogBlong" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="zan_num" property="zanNum" jdbcType="INTEGER" />
    <result column="bad_num" property="badNum" jdbcType="INTEGER" />
    <result column="see_num" property="seeNum" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="DATE" />
    <result column="comment_num" property="commentNum" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="content_vice" property="contentVice" jdbcType="VARCHAR" />
    <collection property="blogImgs" resultMap="blogImgResultMap"></collection>
  </resultMap>
  <sql id="Base_Column_List" >
    blog.blog_id, blog.title, blog.content, blog.blog_blong, blog.type, blog.status, blog.zan_num, blog.bad_num, blog.see_num, blog.create_date, blog.update_date,
    blog.comment_num, blog.user_id, blog.content_vice
  </sql>
  <select id="selectByPrimaryKey"  resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ijenmi.letsgo.model.Blog" useGeneratedKeys="true" keyProperty="blogId">
    insert into blog (blog_id, title, content, 
      blog_blong, type, status, 
      zan_num, bad_num, see_num, create_date, update_date, 
      comment_num, user_id,content_vice)
    values (#{blogId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{blogBlong,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{zanNum,jdbcType=INTEGER}, #{badNum,jdbcType=INTEGER}, #{seeNum,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=DATE}, 
      #{commentNum,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{contentVice,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ijenmi.letsgo.model.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="blogBlong != null" >
        blog_blong,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="zanNum != null" >
        zan_num,
      </if>
      <if test="badNum != null" >
        bad_num,
      </if>
       <if test="seeNum != null" >
        see_num,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="commentNum != null" >
        comment_num,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="contentVice != null" >
        content_vice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="blogBlong != null" >
        #{blogBlong,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="zanNum != null" >
        #{zanNum,jdbcType=INTEGER},
      </if>
       <if test="badNum != null" >
        #{badNum,jdbcType=INTEGER},
      </if>
       <if test="seeNum != null" >
        #{seeNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="commentNum != null" >
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="contentVice != null" >
        #{contentVice,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ijenmi.letsgo.model.Blog" >
    update blog
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="blogBlong != null" >
        blog_blong = #{blogBlong,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="zanNum != null" >
        zan_num = #{zanNum,jdbcType=INTEGER},
      </if>
        <if test="badNum != null" >
        bad_num = #{badNum,jdbcType=INTEGER},
      </if>
       <if test="badNum != null" >
        see_num = #{seeNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=DATE},
      </if>
      <if test="commentNum != null" >
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ijenmi.letsgo.model.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      blog_blong = #{blogBlong,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      zan_num = #{zanNum,jdbcType=INTEGER},
      bad_num = #{badNum,jdbcType=INTEGER},
      see_num = #{seeNum,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=DATE},
      comment_num = #{commentNum,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content_vice = #{contentVice,jdbcType=VARCHAR}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  
   <select id="query" resultMap="BaseResultMap" parameterType="com.ijenmi.letsgo.vo.query.BlogQuery" >
    select 
    	<include refid="Base_Column_List" />
    from blog left join blog_img i on i.blog_id = blog.blog_id
   		 where 1=1 
      <if test="id != null">
	   	and blog.blog_id = #{id,jdbcType=INTEGER}
      </if>  
      <if test="beginDate != null">
	   	and blog.create_date >= #{beginDate,jdbcType=DATE}
      </if> 
      <if test="endDate != null">
	   	and blog.create_date &lt;= #{endDate,jdbcType=DATE} 
      </if> 
      <if test="content != null">
           <bind name="content_" value="'%' +content + '%'" />
          and blog.content like #{content_,jdbcType=VARCHAR}
      </if>
      <if test="type != null">
         and blog.type = #{type,jdbcType=INTEGER}
      </if>
  </select>
  <select id="getBestNewBlogByTypeId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from blog
    where type = #{typeId}
    ORDER BY create_date  desc LIMIT 0,1
  </select>
  
    <select id="getBestHotBlog" resultMap="BaseResultMap" >
		select *
	   <!--  <include refid="Base_Column_List" />,
	    img_id,
	    img_path,
	    img_type,
	    img_content,
	    create_date,
	    is_delete -->
	    from blog 
	   <!--  where type = #{typeId} -->
	    ORDER BY zan_num  desc LIMIT 0,5
  </select>
  
  <select id="getBestNewBlog" resultMap="BaseResultMap" >
		select *
	   <!--  <include refid="Base_Column_List" />,
	    img_id,
	    img_path,
	    img_type,
	    img_content,
	    create_date,
	    is_delete -->
	    from blog 
	   <!--  where type = #{typeId} -->
	    ORDER BY  create_date desc LIMIT 0,1
  </select>
  
   <select id="getBlogCount"  resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    	count(0)
    from blog
     where 1=1
    <if test="typeId != null">
         	type = #{typeId}
    </if>
  </select>
  
  
  
  
 <!-- ================= 以下关于博客图片 -->
  <resultMap type="com.ijenmi.letsgo.model.BlogImg" id="blogImgResultMap">
  	<id column="img_id" property="imgId" jdbcType="INTEGER" />
  	<result column="img_path" property="imgPath" jdbcType="VARCHAR"/>
  	<result column="img_type" property="imgType" jdbcType="INTEGER"/>
  	<result column="img_content" property="imgContent" jdbcType="VARCHAR"/>
  	<result column="create_date" property="createDate" jdbcType="DATE"/>
  	<result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
  	<result column="blog_id" property="blogId" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="blogImgBaseColumn">
  		img_id,img_path,img_type,img_content,create_date,blog_id,is_delete
 	</sql>
  
  <insert id="uploadImg" parameterType="com.ijenmi.letsgo.model.BlogImg">
  	insert into blog_img(img_id,img_path,img_type,img_content,create_date,blog_id) values(
  	#{imgId},#{imgPath},#{imgType},#{imgContent},#{createDate},#{blogId})
  </insert>
  <update id="updateBlogIdByImgId" >
  	update set blog_id= #{blogId} where img_id in (${imgIds,jdbcType=VARCHAR})
  </update>
  
</mapper>