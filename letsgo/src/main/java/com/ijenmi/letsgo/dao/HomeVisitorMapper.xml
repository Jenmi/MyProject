<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ijenmi.letsgo.dao.HomeVisitorMapper" >
  <resultMap id="BaseResultMap" type="com.ijenmi.letsgo.model.HomeVisitor" >
    <id column="visit_id" property="visitId" jdbcType="INTEGER" />
    <result column="visit_ip" property="visitIp" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="operation" property="operation" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    visit_id, visit_ip, user_id, login_name, create_date, operation
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from home_visitor
    where visit_id = #{visitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from home_visitor
    where visit_id = #{visitId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ijenmi.letsgo.model.HomeVisitor" >
    insert into home_visitor (visit_id, visit_ip, user_id, 
      login_name, create_date, operation
      )
    values (#{visitId,jdbcType=INTEGER}, #{visitIp,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{loginName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{operation,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ijenmi.letsgo.model.HomeVisitor" >
    insert into home_visitor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="visitId != null" >
        visit_id,
      </if>
      <if test="visitIp != null" >
        visit_ip,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="operation != null" >
        operation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="visitId != null" >
        #{visitId,jdbcType=INTEGER},
      </if>
      <if test="visitIp != null" >
        #{visitIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ijenmi.letsgo.model.HomeVisitor" >
    update home_visitor
    <set >
      <if test="visitIp != null" >
        visit_ip = #{visitIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=INTEGER},
      </if>
    </set>
    where visit_id = #{visitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ijenmi.letsgo.model.HomeVisitor" >
    update home_visitor
    set visit_ip = #{visitIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      login_name = #{loginName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      operation = #{operation,jdbcType=INTEGER}
    where visit_id = #{visitId,jdbcType=INTEGER}
  </update>
  
   <select id="selectByIp" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
    	count(visit_Id)
    from home_visitor
    where 
    	visit_ip = #{visitIp,jdbcType=VARCHAR} 
    and create_date > curdate() and create_date &lt;= now();
  </select>
   <select id="getHomeVisitorByIp" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    	<include refid="Base_Column_List" />
    from home_visitor
    where 
    	visit_ip = #{visitIp,jdbcType=VARCHAR} 
    and create_date > curdate() and create_date &lt;= now();
  </select>

</mapper>