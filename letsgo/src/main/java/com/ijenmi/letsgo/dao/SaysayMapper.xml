<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ijenmi.letsgo.dao.SaysayMapper" >
  <resultMap id="BaseResultMap" type="com.ijenmi.letsgo.model.Saysay" >
    <id column="saysay_id" property="saysayId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="zan_num" property="zanNum" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    saysay_id, content, type, status, zan_num, create_date, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from saysay
    where saysay_id = #{saysayId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from saysay
    where saysay_id = #{saysayId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ijenmi.letsgo.model.Saysay" >
    insert into saysay (saysay_id, content, type, 
      status, zan_num, create_date, 
      user_id)
    values (#{saysayId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{zanNum,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ijenmi.letsgo.model.Saysay" >
    insert into saysay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="saysayId != null" >
        saysay_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="zanNum != null" >
        zan_num,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="saysayId != null" >
        #{saysayId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="zanNum != null" >
        #{zanNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ijenmi.letsgo.model.Saysay" >
    update saysay
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="zanNum != null" >
        zan_num = #{zanNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where saysay_id = #{saysayId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ijenmi.letsgo.model.Saysay" >
    update saysay
    set content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      zan_num = #{zanNum,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where saysay_id = #{saysayId,jdbcType=INTEGER}
  </update>
</mapper>